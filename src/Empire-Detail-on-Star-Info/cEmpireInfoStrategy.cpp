#include "stdafx.h"
#include "cEmpireInfoStrategy.h"

cEmpireInfoStrategy* cEmpireInfoStrategy::instance = nullptr;

/// AUTOGENERATED METHODS ///

int cEmpireInfoStrategy::AddRef() {
	return Simulator::cStrategy::AddRef();
}
int cEmpireInfoStrategy::Release() {
	return Simulator::cStrategy::Release();
}

const char* cEmpireInfoStrategy::GetName() const {
	return "Empire_Detail_on_Star_Info::cEmpireInfoStrategy";
}

bool cEmpireInfoStrategy::Write(Simulator::ISerializerStream* stream)
{
	return Simulator::ClassSerializer(this, ATTRIBUTES).Write(stream);
}
bool cEmpireInfoStrategy::Read(Simulator::ISerializerStream* stream)
{
	return Simulator::ClassSerializer(this, ATTRIBUTES).Read(stream);
}

/// END OF AUTOGENERATED METHODS ///
////////////////////////////////////

Simulator::Attribute cEmpireInfoStrategy::ATTRIBUTES[] = {
	// Add more attributes here
	// This one must always be at the end
	Simulator::Attribute()
};

void cEmpireInfoStrategy::Initialize() {
	layout = nullptr;
	cEmpireInfoStrategy::instance = this;
}

void cEmpireInfoStrategy::Dispose() {
	
}

void cEmpireInfoStrategy::Update(int deltaTime, int deltaGameTime) {
	
}

bool cEmpireInfoStrategy::WriteToXML(Simulator::XmlSerializer*)
{
	return true;
}

void cEmpireInfoStrategy::OnModeExited(uint32_t previousModeID, uint32_t newModeID) {
	if (previousModeID == GameModeIDs::kGameSpace) {
		if (layout != nullptr) {
			delete layout;
			layout = nullptr;
		}

	}
}

cEmpireInfoStrategy* cEmpireInfoStrategy::Get()
{
	if (!instance) {
		instance = new cEmpireInfoStrategy();
	}
	return instance;
}